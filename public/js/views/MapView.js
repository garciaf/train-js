// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var $, Backbone, MapView, SearchView, StationCollection, StationView, TableStationView, jhere, mapTemplate, stationTableTemplate, _;
  $ = require('jquery');
  _ = require('underscore');
  Backbone = require('backbone');
  jhere = require('jhere');
  StationCollection = require('collections/StationCollection');
  mapTemplate = require('hbs!templates/station/map');
  StationView = require('views/StationView');
  SearchView = require('views/SearchView');
  TableStationView = require('views/TableStationView');
  stationTableTemplate = require('hbs!templates/station/tableStation');
  (function() {});
  return MapView = (function(_super) {

    __extends(MapView, _super);

    function MapView() {
      return MapView.__super__.constructor.apply(this, arguments);
    }

    MapView.prototype.el = 'body';

    MapView.prototype.initialize = function(opts) {
      this.rowViews = [];
      this.SelectedStation = opts.SelectedStation;
      this.SelectedStation.on("change", this.changeStation, this);
      this.collection = opts.collection;
      this.collectionDisplayed = opts.collectionDisplayed;
      this.collection.once("reset", this.syncDisplayed, this);
      this.collection.fetch();
      this.tableStationView = new TableStationView({
        collection: this.collectionDisplayed,
        SelectedStation: this.SelectedStation
      });
      return this.searchView = new SearchView({
        collectionDisplayed: this.collectionDisplayed,
        collection: this.collection
      });
    };

    MapView.prototype.changeStation = function() {
      console.log("station Changed");
      return $("#station").html(this.SelectedStation.get("name"));
    };

    MapView.prototype.syncDisplayed = function() {
      return this.collectionDisplayed.reset(this.collection.models);
    };

    MapView;


    return MapView;

  })(Backbone.View);
});
