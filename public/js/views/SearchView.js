// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var $, Backbone, Dispatcher, SearchView, StationCollection, _;
  $ = require('jquery');
  _ = require('underscore');
  Backbone = require('backbone');
  StationCollection = require('collections/StationCollection');
  Dispatcher = require('event');
  (function() {});
  return SearchView = (function(_super) {

    __extends(SearchView, _super);

    function SearchView() {
      return SearchView.__super__.constructor.apply(this, arguments);
    }

    SearchView.prototype.el = 'body';

    SearchView.prototype.events = {
      "keyup #search": "searchStation"
    };

    SearchView.prototype.initialize = function() {
      this.search = $("#search");
      this.collection = new StationCollection();
      this.collection.on("reset", this.searchStation, this);
      return this.collection.fetch();
    };

    SearchView.prototype.searchStation = function() {
      return Dispatcher.trigger("search:complete", this.collection.findPerName(this.search.val()));
    };

    SearchView;


    return SearchView;

  })(Backbone.View);
});
