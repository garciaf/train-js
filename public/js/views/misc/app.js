// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var $, AppView, Backbone, Dispatcher, _;
  $ = require('jquery');
  _ = require('underscore');
  Backbone = require('backbone');
  Dispatcher = require('event');
  (function() {});
  return AppView = (function(_super) {

    __extends(AppView, _super);

    function AppView() {
      return AppView.__super__.constructor.apply(this, arguments);
    }

    AppView.prototype.initialize = function(opts) {
      _.bindAll(this);
      $(window).resize(function() {
        return Dispatcher.trigger("window:resized", $(this).height());
      });
      Dispatcher.on("info:selected", this.displayInfoInLoop, this);
      Dispatcher.on("window:resized", this.resizeContent, this);
      Dispatcher.on("station:selected", this.removeInfo, this);
      this.setElement($("#info"));
      return this.resizeContent($(window).height());
    };

    AppView.prototype.resizeContent = function(windowHeight) {
      return $("#content").css("height", windowHeight - 80);
    };

    AppView.prototype.removeInfo = function() {
      if (this.intervalID != null) {
        clearInterval(this.intervalID);
      }
      return this.$el.html('');
    };

    AppView.prototype.displayInfoInLoop = function(info) {
      var destination,
        _this = this;
      destination = info.get('origdest');
      if (this.intervalID != null) {
        clearInterval(this.intervalID);
      }
      return this.intervalID = setInterval(function() {
        var duration, hours;
        duration = info.getTimeremaining();
        hours = duration.hours() !== 0 ? "" + (duration.hours()) + ":" : "";
        return _this.$el.html("<i class='icon-resize-horizontal'></i> " + destination + " " + hours + (duration.minutes()) + ": " + (duration.seconds()));
      }, 1000);
    };

    return AppView;

  })(Backbone.View);
});
